During development:
Handle the headers correctly
storing sensitive content
Hashing passwords + salt: bcrypt
password encryption
Safe defaults and dynamic typing
Race conditions
Use prepared statements
Safe file handling
Use HTTPS
XSS attacks: check xss-clean, sanitize user input 
CSRF attacks: csurf
SQL Injections: escape queries, prepared statements
add captcha

During deployment:


Development:
    Always hash the password before checking if a user exists or not, if you hash it after you check for the user, the attacker can tell by the difference in time taken to reply to the attacker.
    Input data sanitization